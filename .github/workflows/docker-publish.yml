# .github/workflows/docker-publish.yml

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/zadanie-drugie
  CACHE_IMAGE: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/zadanie-drugie-cache:buildcache

name: Build, Scan & Publish Multi-Arch Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    name: Build (amd64) and Scan CVEs
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU for amd64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build amd64 image for scanning
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          load: true
          tags: scan:${{ github.sha }}

      - name: Scan image for CVEs
        uses: aquasecurity/trivy-action@v0
        with:
          image-ref: scan:${{ github.sha }}
          format: table
          severity: CRITICAL,HIGH
          exit-code: '1'

  build-and-push:
    name: Build & Push Multi-Arch (with cache)
    runs-on: ubuntu-latest
    needs: build-and-scan
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub for cache
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image with cache
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to:   type=registry,ref=${{ env.CACHE_IMAGE }},mode=max

      - name: Image digest
        run: |
          echo "Image pushed with digest: $(docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:latest --format '{{ .Digest }}')"
